<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Обзоры книг on Ирокезнутый блог</title>
    <link>https://it-irokez.ru/books_reviews/</link>
    <description>Recent content in Обзоры книг on Ирокезнутый блог</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Sun, 25 Sep 2022 20:25:57 +0300</lastBuildDate><atom:link href="https://it-irokez.ru/books_reviews/rss.xml" rel="self" type="application/rss+xml" />
    <item turbo="true">
      <title>ASP.NET Core in Action. Андрю Лок</title>
      <link>https://it-irokez.ru/books_reviews/aspnetcoreinaction/</link>
      <pubDate>Mon, 21 Mar 2022 09:48:11 +0300</pubDate>
      
      <guid>https://it-irokez.ru/books_reviews/aspnetcoreinaction/</guid>
      <description>И так, я дочитал ASP.NET Core in Action за авторством Андрю Лока. Книга посвящена работе с asp.net core версии 5.0. Версия уже не самая свежая, однако это нисколько не умоляет важность и нужность этой книги.
Как вы уже могли догадаться, книга мне понравилась. К моменту, как я начал читать книгу, у меня уже был опыт работы с asp.net core приложениями, и я даже успел поработать с Blazor-ом, по этому брал я ее в надежде добрать базовые знания, которые, как мы все знаем, легко недобрать если сразу погружаешься в практическую разработку.</description>
      <turbo:content>&lt;p&gt;&lt;img src=&#34;https://it-irokez.ru/assets/images/book_4.png&#34; alt=&#34;обложка книги&#34;&gt;&lt;/p&gt;
&lt;p&gt;И так, я дочитал ASP.NET Core in Action за авторством Андрю Лока. Книга посвящена работе с asp.net core версии 5.0. Версия уже не самая свежая, однако это нисколько не умоляет важность и нужность этой книги.&lt;/p&gt;
&lt;p&gt;Как вы уже могли догадаться, книга мне понравилась. К моменту, как я начал читать книгу, у меня уже был опыт работы с asp.net core приложениями, и я даже успел поработать с Blazor-ом, по этому брал я ее в надежде добрать базовые знания, которые, как мы все знаем, легко недобрать если сразу погружаешься в практическую разработку. И я не прогадал. Книга дала мне именно то, на что я и рассчитывал – базовое понимание принципов работы и конфигурирования asp.net core приложений, объяснила особенности различия MVC и Razor pages подходов, научила работать с middleware и filter пайплайнами и проводить интеграционное тестирование всего приложения или же просто запускать его в памяти, чтобы иметь возможность протестировать работу мидлвари. В книги большое количество прикладных примеров и отдельно мое сердечко погрел тот факт, что автор уделяет внимание безопасности приложения, рассказывает о best practice и причинах, по которым они стали таковыми.&lt;/p&gt;
&lt;p&gt;Если вы новичок, который уже разобрался в том, как программировать на C# и теперь хотите качественно вкатиться в веб разработку, то эта книга – это то что вам нужно. Если же вы, как и я, уже успели вкусить разработки под asp.net core, но пропустили базовый этап обучения, то тоже настоятельно рекомендую почитать эту книгу. Читать ее целиком смысла не будет, но отдельные подглавы зацепят ваш взгляд сами по себе, в этом я уверен.&lt;/p&gt;
</turbo:content>
    </item>
    
    <item turbo="true">
      <title>Конкурентность в C#. Стивен Клири</title>
      <link>https://it-irokez.ru/books_reviews/concurency/</link>
      <pubDate>Wed, 12 Jan 2022 09:44:02 +0300</pubDate>
      
      <guid>https://it-irokez.ru/books_reviews/concurency/</guid>
      <description>Если коротко &amp;ndash; книга показалась мне полезной. А теперь развернуто :D.
Начну с того, что мне в книге понравилось и что доставило мне удовольствие. Во-первых, я научился нормально использовать async/await и писать асинхронные методы (или методы поддерживающие ожидание). Во-вторых, я научился делать многопоточность с помощью PLINQ, использовать конкурентные множества и знаю зачем нужны иммутабельные (неизменяемые) множества. В-третьих, узнал об реактивном и dataflow подходах. Dataflow настолько меня впечатлил, что я даже решил утащить его в проект на работе.</description>
      <turbo:content>&lt;p&gt;&lt;img src=&#34;https://it-irokez.ru/assets/images/book_3.png&#34; alt=&#34;обложка книги&#34;&gt;&lt;/p&gt;
&lt;p&gt;Если коротко &amp;ndash; книга показалась мне полезной.
А теперь развернуто :D.&lt;/p&gt;
&lt;p&gt;Начну с того, что мне в книге понравилось и что доставило мне удовольствие. Во-первых, я научился нормально использовать async/await и писать асинхронные методы (или методы поддерживающие ожидание). Во-вторых, я научился делать многопоточность с помощью PLINQ, использовать конкурентные множества и знаю зачем нужны иммутабельные (неизменяемые) множества. В-третьих, узнал об реактивном и dataflow подходах. Dataflow настолько меня впечатлил, что я даже решил утащить его в проект на работе.&lt;/p&gt;
&lt;p&gt;Что мне в книге не понравилось:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Авторский стиль&lt;/strong&gt;.  Манера повествования автора скачет от &amp;ldquo;вы впервые увидели async&amp;rdquo; до &amp;ldquo;вам необходимо сохранить контекст потока&amp;rdquo;. Автор так и не смог определиться, пишет ли он сборник рецептов для тех, кто уже видел конкурентный код и сталкивался с его последствиями (чем на мой взгляд и является эта книга) или же попытка научить использовать конкурентность тех, кто с ней не сталкивался.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Структура книги&lt;/strong&gt;. У меня при чтении сложилось впечатление, что главы книги словно бы идут в не правильном порядке. Вероятнее всего это чисто субъективное мнение, но тем не менее.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Мало реальных примеров&lt;/strong&gt;. В книге действительно мало примеров, которые были бы введены не для наглядности, а для демонстрации мощности приведенных методов и подходов.&lt;/li&gt;
&lt;/ul&gt;
</turbo:content>
    </item>
    
    <item turbo="true">
      <title>Head First Паттерны проектирования. Эрика и Элизабет Фримен</title>
      <link>https://it-irokez.ru/books_reviews/head_first_patterns/</link>
      <pubDate>Sun, 02 Jan 2022 08:33:59 +0300</pubDate>
      
      <guid>https://it-irokez.ru/books_reviews/head_first_patterns/</guid>
      <description>Еще одна книга, которую мне следовало прочитать довольно давно (Хотя бы потому что книга издания 2013-го года столько лет лежит у меня на полке). Возможно даже раньше, чем &amp;ldquo;Чистый код&amp;rdquo; Мартина. В книге на простых и понятных примерах из жизни выдуманного города &amp;ldquo;Объектвиля&amp;rdquo; разбирает паттерны:
 Стратегия; Наблюдатель; Декоратор; Фабрика; Одиночка; Команда; Адаптер; Фасад; Шаблонный метод; Итератор; Компоновщик; Состояние; Заместитель.  Примеры в книге написаны на столь горячо любимой фанатами ООП Java, но специфичных именно для Java примеров в книге не так много.</description>
      <turbo:content>&lt;p&gt;&lt;img src=&#34;https://it-irokez.ru/assets/images/book_1.png&#34; alt=&#34;обложка книги&#34;&gt;&lt;/p&gt;
&lt;p&gt;Еще одна книга, которую мне следовало прочитать довольно давно (Хотя бы потому что книга издания 2013-го года столько лет лежит у меня на полке). Возможно даже раньше, чем &amp;ldquo;Чистый код&amp;rdquo; Мартина. В книге на простых и понятных примерах из жизни выдуманного города &amp;ldquo;Объектвиля&amp;rdquo; разбирает паттерны:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Стратегия;&lt;/li&gt;
&lt;li&gt;Наблюдатель;&lt;/li&gt;
&lt;li&gt;Декоратор;&lt;/li&gt;
&lt;li&gt;Фабрика;&lt;/li&gt;
&lt;li&gt;Одиночка;&lt;/li&gt;
&lt;li&gt;Команда;&lt;/li&gt;
&lt;li&gt;Адаптер;&lt;/li&gt;
&lt;li&gt;Фасад;&lt;/li&gt;
&lt;li&gt;Шаблонный метод;&lt;/li&gt;
&lt;li&gt;Итератор;&lt;/li&gt;
&lt;li&gt;Компоновщик;&lt;/li&gt;
&lt;li&gt;Состояние;&lt;/li&gt;
&lt;li&gt;Заместитель.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Примеры в книге написаны на столь горячо любимой фанатами ООП Java, но специфичных именно для Java примеров в книге не так много.
Помимо того, что авторы рассказывают о том, как использовать тот или иной паттерн и как его реализовать, большое внимание уделяется ОО-проектированию как таковому. Из главы в главу перекочевывает постепенно расширяющийся список принципов ОО-проектирования. Именно для того, чтобы в дальнейшем лучше усвоить эти принципы я бы рекомендовал читать эту книгу ПЕРЕД чистым кодом.
В конце книги один из разделов главы посвящен тому, что использование паттернов не решит все ваши проблемы и что не нужно проектировать систему под паттерны. Они должны вписываться в систему органично и желательно не насильственно :D&lt;/p&gt;
</turbo:content>
    </item>
    
    <item turbo="true">
      <title>Чистый код. Роберт Мартин</title>
      <link>https://it-irokez.ru/books_reviews/clear_code/</link>
      <pubDate>Sun, 05 Dec 2021 08:40:14 +0300</pubDate>
      
      <guid>https://it-irokez.ru/books_reviews/clear_code/</guid>
      <description>Вчера я закончил чтение книги, прочесть которую мне следовало довольно давно. Книга в IT среде популярна настолько, что я не вижу никакого смысла разбирать, а что же там написано, я скорее хотел бы рассказать о своих мыслях и впечатлениях.
Я программирую уже более 7-ми лет, но &amp;ldquo;качественно копать в глубину&amp;rdquo; я решил совсем недавно. Именно поэтому создалось впечатление, что книга была нужна мне лет 5 назад, когда мне советовал ее одногруппник, а не теперь, когда большая часть идей из книги была получена мной от других людей или на личном опыте.</description>
      <turbo:content>&lt;p&gt;&lt;img src=&#34;https://it-irokez.ru/assets/images/book_2.png&#34; alt=&#34;обложка книги&#34;&gt;&lt;/p&gt;
&lt;p&gt;Вчера я закончил чтение книги, прочесть которую мне следовало довольно давно. Книга в IT среде популярна настолько, что я не вижу никакого смысла разбирать, а что же там написано, я скорее хотел бы рассказать о своих мыслях и впечатлениях.&lt;/p&gt;
&lt;p&gt;Я программирую уже более 7-ми лет, но &amp;ldquo;качественно копать в глубину&amp;rdquo; я решил совсем недавно. Именно поэтому создалось впечатление, что книга была нужна мне лет 5 назад, когда мне советовал ее одногруппник, а не теперь, когда большая часть идей из книги была получена мной от других людей или на личном опыте. Думаю, что вместо того, чтобы читать всю книгу целиком, я мог бы прочитать раздел &amp;ldquo;Запахи кода&amp;rdquo; (есть отличный сайт про них и чистый код) и ничего не потерять, но этот вариант подходит только тем, кто работал в командах с практиками код-ревью.&lt;/p&gt;
&lt;p&gt;Недавно в одном из чатов, где я сижу, прозвучало мнение о том, что книгу следует отправить в помойку. На мой вопрос &amp;ldquo;почему?&amp;rdquo; я ответа не получил, но вы получите от меня ответ о том, почему на мой взгляд этого делать не стоит. Думаю, что любой из вас, вне зависимости от взглядов на религию, согласится, что всякого рода заповеди вида &amp;ldquo;не укради&amp;rdquo; и &amp;ldquo;не убей&amp;rdquo; не несут в себе ничего плохого. К этой книге следует относиться также. Сама по себе она не несет ничего плохого и идеи в ней логичные и здравые, плохими они становятся при попадании в руки фанатиков, которые начинают гнаться за чистым кодом и чистой архитектурой вне контекста.&lt;/p&gt;
</turbo:content>
    </item>
    
  </channel>
</rss>